Currently here: a Markov random verse generator. There's sample
output at https://gist.github.com/darius/2371822

To generate it:
$ python verse.py sonnet  # or limerick or other verse form it knows about

Currently missing: the data it works from. You need two files:

* 2gm-common6: from http://norvig.com/ngrams/
  (lines like "word1 word2\tcount" for common bigrams)
  (word1 can be "<S>" for start of sentence)
* cmudict.0.7a: from http://www.speech.cs.cmu.edu/cgi-bin/cmudict

I'd like to add I don't normally publish code in such a crap state.


NOTE

Three files checked in to this repo (pdist.py,
contractionmodel.bigram, and contractionmodel.unigram) are NOT
copyright by me, Darius Bacon. They're derived from files at
http://norvig.com/ngrams/ (but not identical to any of them).
pdist.py by Peter Norvig is distributed under the MIT license.
The two data files weren't originally included here, and should
probably be removed, but I'm including them for the moment to
make it easier to actually try out the code.

The remaining files are by me, and distributed under the MIT license.


Some other hacks thrown in here:

* anagram.py generates multiword anagrams

* bestpermutation.py helps to sort anagrams by quality (using n-gram
statistics and brute force)

* bibleanalyze.py breaks down the Gutenberg Project's KJ Bible into raw material for other hacks here

* companynames.py generate random Web2.0 company names, along with a plausibility rating for each.

* emvowel.py reverses disemvoweling

* mnemonify.py tries to invent mnemonics like pi's "How I wish I could enumerate pi easily..."

* portmanteau.py finds pairs of words that blend nicely, like book + hookup --> bookup

* summarize.py generates chapter 'summaries' for a book, like http://wry.me/blog/2010/04/08/quantitative-tolkien-studies.html

* textanalyze.py is a super-crude sentence segmenter

* tohtml.py writes HTML that highlights words with increasing intensity the more unlikely they are according to a language model

* verse.py described above

See also https://github.com/darius/amphigory for verse-making
rewritten in Javascript.

Finally, there's https://github.com/darius/versecop -- I'm sorry I
don't remember if it has worthwhile differences from the verse code in
this repo.
